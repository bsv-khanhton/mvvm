apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: "kotlin-kapt"


repositories {
    jcenter()
}

android {
    flavorDimensions "default"
    compileSdkVersion 33
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "com.bsv.testpush"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude("META-INF/DEPENDENCIES")
        exclude("META-INF/LICENSE")
        exclude("META-INF/LICENSE.txt")
        exclude("META-INF/license.txt")
        exclude("META-INF/NOTICE")
        exclude("META-INF/NOTICE.txt")
        exclude("META-INF/notice.txt")
        exclude("META-INF/ASL2.0")
        exclude("META-INF/*.kotlin_module")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    viewBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        dev {
            applicationId "vn.com.bravesoft.androidappdev"
            manifestPlaceholders = [appname: 'MVVM Dev']
            buildConfigField "String", "URL_API", '"https://jsonplaceholder.typicode.com"'
        }
        prod {
            applicationId "vn.com.bravesoft.androidapp"
            manifestPlaceholders = [appname: 'MVVM Prod']
            buildConfigField "String", "URL_API", '"https://jsonplaceholder.typicode.com"'
        }
    }
    applicationVariants.all { variant ->

        if (variant.getName().contains("dev")) {
            renameAPK(variant, 'Jcom', 'Dev', variant.versionCode)
        }
        if (variant.getName().contains("prod")) {
            renameAPK(variant,'Jcom','Prod',variant.versionCode)
        }

    }
}

static def renameAPK(variant, app_name, env, ver) {
    def formattedDate = new Date().format('yyyyMMdd')
    def fileName = app_name + "_" + env + "_" + formattedDate + ".apk"
    variant.outputs.all {
        outputFileName = fileName
    }
}

dependencies {
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation project(path: ':custom-ui-youtube')
    implementation project(path: ':youtubeplayer')
    //implementation project(path: ':youtubeplayer')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //retrofit load api
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.6.3"
    implementation('com.squareup.okhttp3:logging-interceptor:4.2.2') {
        transitive = true
    }
    implementation "com.google.code.gson:gson:$gson_version"

    //Rx Android
    implementation "io.reactivex.rxjava2:rxandroid:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "com.jakewharton.rxbinding3:rxbinding:$rxbinding_version"

    //loadding
    implementation 'com.kaopiz:kprogresshud:1.2.0'

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // Architecture Components Lifecycles
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    kapt 'androidx.lifecycle:lifecycle-common-java8:2.3.1'

    implementation 'com.itkacher.okhttpprofiler:okhttpprofiler:1.0.7'

    implementation  'com.jakewharton.rxbinding2:rxbinding:2.1.1'

    implementation 'com.github.yogacp:android-viewbinding:1.0.2'

    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    // birghtcove
    implementation "com.brightcove.player:exoplayer2:8.0.0"

    implementation 'com.github.bumptech.glide:glide:4.9.0'

    //permissions
    implementation 'com.nabinbhandari.android:permissions:3.8'

    implementation("org.greenrobot:eventbus:3.3.1")

    implementation "androidx.leanback:leanback:1.2.0-alpha02"
    //implementation "androidx.leanback:leanback-preference:1.2.0-alpha02"
}
